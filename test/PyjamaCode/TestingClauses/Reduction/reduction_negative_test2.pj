package PyjamaCode.TestingClauses.Reduction;
import pj.Pyjama;

/**
 * current pyjama does not support i<=n-1, use like this: i<=(n-1)
 */
public class reduction_negative_test2{
	private int[] a;
	public int parallel_for_reduction(int threadNumber,int n){		
		Pyjama.omp_set_num_threads(threadNumber);
		a=new int[n];
		int sum=0; 
		int i;
		for(i = 0; i <= n-1; i++){
			a[i]=i;
		}	
		//#omp parallel for shared(n) reduction(+:sum) firstprivate(i)
		for(i = 0; i<=n-1; i++){
			sum=sum+a[i];
		}	
		return sum;
	}
	
	
	public int parallel_reduction(int threadNumber){		
		Pyjama.omp_set_num_threads(threadNumber);
		int sum = 0;

		//#omp parallel reduction(+:sum)
		{			
			sum+=1;
		}	
		return sum;
	}

	public int parallel_sections_reduction(int threadNumber){		
		Pyjama.omp_set_num_threads(threadNumber);
		int sum = 0;

		//#omp parallel sections reduction(+:sum)
		{			
			//#omp section
			{
				sum = sum + 1;
			}
			//#omp section
			{
				sum = sum + 1;
			}
		}	
		return sum;
	}
}
