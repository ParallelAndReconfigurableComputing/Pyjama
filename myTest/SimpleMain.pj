import pj.*;

import utils.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;


public class SimpleMain extends JFrame implements ActionListener {
	
    private JButton btnReactive  = new JButton("Reactive?");
    private JButton btnCompute = new JButton("Compute");
    
	public SimpleMain() {

        JPanel panel = new JPanel(new BorderLayout());
        panel.add(btnReactive, BorderLayout.CENTER);
        panel.add(btnCompute, BorderLayout.SOUTH);
        
        btnCompute.addActionListener(this);
        btnReactive.addActionListener(this);
        setTitle("SimpleMain");
        setContentPane(panel);
        setLocation(100, 100);
        setSize(1050, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
	}

	public void actionPerformed(ActionEvent e) {
			//System.out.println("AP start "+ Thread.currentThread().getName() + "  (Thread "+Thread.currentThread().getId()+")");

		if (e.getSource() == btnReactive) {
			btnReactive.setBackground(new Color( (int)(256*Math.random()) ,(int)(256*Math.random()),(int)(256*Math.random()) ));
		} else {
 			//#omp parallel
			{
				SimulateWork.work(200);
				System.out.println("AP Simulate work "+ Thread.currentThread().getName()+ "  (Thread "+Thread.currentThread().getId()+")");
			}
			
		}

			//System.out.println("AP End "+ Thread.currentThread().getName() + "  (Thread "+Thread.currentThread().getId()+")");
		}


    public static void main(final String[] args) {

// first case

    	//#omp parallel
    	{
			SimulateWork.work(100);
			System.out.println("main()"+ Thread.currentThread().getName()+ "  (Thread "+Thread.currentThread().getId()+")");
		}



//second case
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                JFrame frame = new SimpleMain();
                frame.setVisible(true);
            }
        });
     
    }


}